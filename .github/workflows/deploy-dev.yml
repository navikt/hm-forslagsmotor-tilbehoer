name: deploy-dev
on:
  push:
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENCE"
      - "CODEOWNERS"
    branches:
      - main
      - trivy

jobs:
  build:
    permissions:
      contents: write
      id-token: write
    name: Build, deploy to dev, and draft release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build and Run tests
        run: ./gradlew clean build
        env:
          TESTCONTAINERS_RYUK_DISABLED: true

      - name: pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdigihot
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ env.VERSION_TAG }}

      - name: deploy to dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yml
          IMAGE: ${{steps.docker-build-push.outputs.image}}

      - name: post-deploy
        if: github.ref == 'refs/heads/main'
        uses: navikt/digihot-deploy/actions/post-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: draft release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  trivy-imagescan:
    name: Scan dockerimage with Trivy
    needs: build
    #if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      id-token: write
    steps:
      - uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: teamdigihot
      - name: Run Trivy vulnerability scanner on docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build-and-deploy.outputs.image }}
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'